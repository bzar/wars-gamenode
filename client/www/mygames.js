// Generated by CoffeeScript 1.4.0
(function() {

  require(["gamenode", "base"], function() {
    var client, populateMyGames, session;
    client = new GameNodeClient(Skeleton);
    session = null;
    $(document).ready(function() {
      var loginUrl;
      loginUrl = "login.html?next=" + document.location.pathname + document.location.search;
      return session = resumeSessionOrRedirect(client, WARS_CLIENT_SETTINGS.gameServer, loginUrl, function() {
        populateNavigation(session);
        populateMyGames(client);
        return initializeChat(client);
      });
    });
    return populateMyGames = function(client) {
      return client.stub.myGames(null, function(response) {
        var game, map, mapItem, myGames, name, nameItem, players, playersItem, row, state, stateItem, turn, turnItem, _i, _len, _ref, _results;
        if (!response.success) {
          alert("Error loading games! " + response.reason);
          return;
        }
        myGames = $("#myGames tbody");
        _ref = response.games;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          game = _ref[_i];
          row = $("<tr></tr>");
          nameItem = $("<td></td>");
          mapItem = $("<td></td>");
          playersItem = $("<td></td>");
          stateItem = $("<td></td>");
          turnItem = $("<td></td>");
          name = $("<a></a>");
          map = $("<a></a>");
          players = $("<a></a>");
          state = $("<a></a>");
          turn = $("<a></a>");
          name.text(game.name);
          map.text(game.map.name);
          players.text((game.state === "pregame" ? game.numPlayers + "/" + game.map.players : game.numPlayers));
          state.text(game.state);
          if (game.state === "pregame" || game.state === "finished") {
            turn.text("N/A");
          } else if (game.inTurn) {
            turn.text("Your turn!");
          } else {
            turn.text("Player " + game.inTurnNumber);
          }
          nameItem.append(name);
          mapItem.append(map);
          playersItem.append(players);
          stateItem.append(state);
          turnItem.append(turn);
          row.append(nameItem);
          row.append(mapItem);
          row.append(playersItem);
          row.append(stateItem);
          row.append(turnItem);
          $("a", row).attr("href", (game.state === "pregame" ? "/pregame.html" : "game.html") + "?gameId=" + game.gameId);
          _results.push(myGames.append(row));
        }
        return _results;
      });
    };
  });

}).call(this);
